Learning Journal: PHP User Authentication System Implementation


Project Overview
For Prac 7 - PHP, we were required to create an original PHP project to demonstrate our understanding of PHP features and skills. Instead of following an existing tutorial, I developed a Simple User Authentication System with the following core functionalities:
User Registration (Signup) â€“ Allow users to create an account with a username, email, and password.

User Login (Authentication) â€“ Enable registered users to log in using their credentials. 

User Dashboard (Protected Page after Login) â€“ Restrict access to authorized users only.

Logout Functionality â€“ Allow users to securely log out of the system.

Additionally, we forked and cloned "The Advice Shop" repository (https://github.com/lindsaymarkward/theadviceshop.git) to explore possible enhancements such as integrating authentication features.

Implementation Steps

1. Setting Up the Environment
â€¢	Installed a local server environment (XAMPP) for running PHP and MySQL.
â€¢	Created a project folder within htdocs for the PHP scripts.
â€¢	Set up a MySQL database and a users table for storing user credentials securely.


2. Developing the PHP Scripts
ðŸ”¹ User Registration (signup.php)
â€¢	Created a form for users to enter their username, email, and password.
â€¢	Used PHP to validate input and check for duplicate email addresses.
â€¢	Stored user passwords securely using password_hash().

ðŸ”¹ User Login (login.php)
â€¢	Implemented a form for users to enter their credentials.
â€¢	Used PHP to verify email and password using password_verify().
â€¢	Started a session to maintain user authentication status.

ðŸ”¹ User Dashboard (dashboard.php)
â€¢	Restricted access to logged-in users using session verification.
â€¢	Displayed user-specific content after successful login.

ðŸ”¹ Logout Functionality (logout.php)
â€¢	Implemented session destruction to ensure users log out securely.

Enhancing "The Advice Shop"

To align with the optional enhancement, we considered integrating our authentication system into "The Advice Shop" by:
â€¢	Adding a login system to restrict certain pages to registered users.
â€¢	Enhancing the shopping experience by allowing user-specific recommendations.
â€¢	Improving session management for a more personalized user experience.

Challenges and Solutions
Challenge	Solution
Handling password security	Used password_hash() and password_verify() for secure authentication.
Managing session persistence	Implemented proper session management to maintain user login state.
Preventing SQL injection	Used prepared statements in MySQL queries to enhance security.
Integrating authentication into "The Advice Shop"	Explored modifying existing PHP code to support user login.

Key Learnings
Understanding PHP sessions and their role in user authentication.
Securely handling user credentials using password hashing techniques.
Implementing database interactions using prepared statements to prevent SQL injection.
Exploring real-world PHP project structures by integrating authentication into "The Advice Shop."

Conclusion & Next Steps
This project provided a hands-on experience in implementing PHP authentication systems. Moving forward, we aim to:
â€¢	Expand the project by adding password reset functionality.
â€¢	Implement email verification for user accounts.
â€¢	Further integrate authentication into "The Advice Shop" to enhance the user experience.

